const n=JSON.parse('{"key":"v-fe47a9dc","path":"/exercise/javascript/pubSub.html","title":"手写发布订阅模式","lang":"zh-CN","frontmatter":{"date":"2023-05-08T00:00:00.000Z","category":["面试"],"tag":["js","手写"],"description":"手写发布订阅模式 实现思路 需要有一个 map 对象缓存订阅事件 订阅（on）如果存在事件就往 map 里面缓存事件 取消订阅（off）从 map 对象找到订阅事件删除 发布（emit）从 map 对象找到事件去执行就OK 实现代码 class EventEmitter { //事件哈希表 map = {} //监听事件 on = (type, fn) =&gt; { if (!this.map[type]) { this.map[type] = [] } this.map[type].push(fn) } //取消监听 off = (type, fn) =&gt; { const queue = this.map[type] if (!queue) return const index = queue.indexOf(fn) if (index &lt; 0) return this.map[type].splice(index, 1) } //触发事件 emit = (type, data) =&gt; { const queue = this.map[type] if (!queue) return queue.forEach(func =&gt; { func.call(null, data) }); } } const myEvent = new EventEmitter() myEvent.on(\\"click\\", (data) =&gt; { console.log(\\"触发click\\", \\"data:\\" + data); }) myEvent.on(\\"click\\", (data) =&gt; { console.log(\\"触发click2\\", \\"data:\\" + data); }) myEvent.emit(\\"click\\", \\"test data\\") myEvent.off(\\"click\\")","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/exercise/javascript/pubSub.html"}],["meta",{"property":"og:site_name","content":"Serendipity"}],["meta",{"property":"og:title","content":"手写发布订阅模式"}],["meta",{"property":"og:description","content":"手写发布订阅模式 实现思路 需要有一个 map 对象缓存订阅事件 订阅（on）如果存在事件就往 map 里面缓存事件 取消订阅（off）从 map 对象找到订阅事件删除 发布（emit）从 map 对象找到事件去执行就OK 实现代码 class EventEmitter { //事件哈希表 map = {} //监听事件 on = (type, fn) =&gt; { if (!this.map[type]) { this.map[type] = [] } this.map[type].push(fn) } //取消监听 off = (type, fn) =&gt; { const queue = this.map[type] if (!queue) return const index = queue.indexOf(fn) if (index &lt; 0) return this.map[type].splice(index, 1) } //触发事件 emit = (type, data) =&gt; { const queue = this.map[type] if (!queue) return queue.forEach(func =&gt; { func.call(null, data) }); } } const myEvent = new EventEmitter() myEvent.on(\\"click\\", (data) =&gt; { console.log(\\"触发click\\", \\"data:\\" + data); }) myEvent.on(\\"click\\", (data) =&gt; { console.log(\\"触发click2\\", \\"data:\\" + data); }) myEvent.emit(\\"click\\", \\"test data\\") myEvent.off(\\"click\\")"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-08T15:54:40.000Z"}],["meta",{"property":"article:author","content":"Serendipity"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"手写"}],["meta",{"property":"article:published_time","content":"2023-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-08T15:54:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写发布订阅模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-08T15:54:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Serendipity\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]},{"level":2,"title":"实现代码","slug":"实现代码","link":"#实现代码","children":[]}],"git":{"createdTime":1683561280000,"updatedTime":1683561280000,"contributors":[{"name":"yyl","email":"774203837@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"exercise/javascript/pubSub.md","localizedDate":"2023年5月8日","excerpt":"<h1> 手写发布订阅模式</h1>\\n<h2> 实现思路</h2>\\n<ul>\\n<li>需要有一个 map 对象缓存订阅事件</li>\\n<li>订阅（on）如果存在事件就往 map 里面缓存事件</li>\\n<li>取消订阅（off）从 map 对象找到订阅事件删除</li>\\n<li>发布（emit）从 map 对象找到事件去执行就OK</li>\\n</ul>\\n<h2> 实现代码</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">EventEmitter</span> <span class=\\"token punctuation\\">{</span>\\n\\n  <span class=\\"token comment\\">//事件哈希表</span>\\n  map <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">//监听事件</span>\\n  <span class=\\"token function-variable function\\">on</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type<span class=\\"token punctuation\\">,</span> fn</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>fn<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">//取消监听</span>\\n  <span class=\\"token function-variable function\\">off</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type<span class=\\"token punctuation\\">,</span> fn</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> queue <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>queue<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token keyword\\">const</span> index <span class=\\"token operator\\">=</span> queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>fn<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>index <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">splice</span><span class=\\"token punctuation\\">(</span>index<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">//触发事件</span>\\n  <span class=\\"token function-variable function\\">emit</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">type<span class=\\"token punctuation\\">,</span> data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> queue <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>queue<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n    queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">func</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">func</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">call</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">const</span> myEvent <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">EventEmitter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\nmyEvent<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"click\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"触发click\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"data:\\"</span> <span class=\\"token operator\\">+</span> data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\nmyEvent<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"click\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"触发click2\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"data:\\"</span> <span class=\\"token operator\\">+</span> data<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\nmyEvent<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"click\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"test data\\"</span><span class=\\"token punctuation\\">)</span>\\n\\nmyEvent<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">off</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"click\\"</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
